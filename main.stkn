# nodes
canvas: document.getElementById('canvas')
display: document.getElementById('display')
bullet: (():
    a: document.getElementById('bullet_anchor')
    parent: document.createElement('div')
    jQuery(parent).addClass('parent')
    div: document.createElement('div')
    jQuery(div).addClass('bullet')
    div.style.top: a.offsetTop + 'px'
    div.style.left: a.offsetLeft + 'px'
    div.style.width: aaWidth() - a.offsetLeft + 'px'
    canvas.appendChild(parent)
    parent.appendChild(div)
    return div
)()

# beam animation
TICK: 18

func bodyW()
    return document.body.clientWidth

func fromRGB(r, g, b)
    func hex2(x)
        s: Math.floor(x).toString(16)
        if s.length = 1
            return '0' + s
        return s
    return {
        str: ():
            return '#' + hex2(r) + hex2(g) + hex2(b)
          ,
        adjust: (ratio):
            return fromRGB(r * ratio, g * ratio, b * ratio)
          ,
    }

func horiLaser(y, h, color, z, cb)
    func extend(node, width, cb)
        STEP: 64
        if bodyW() <= width
            node.style.width: bodyW() + 'px'
            return cb()
        node.style.width: width + 'px'
        setTimeout(%, TICK)
        extend(node, width + STEP, cb)

    func fade(node, opacity, cb)
        RATE: 0.03
        if opacity <= 0
            node.style.opacity: 0
            return cb()
        node.style.opacity: opacity
        setTimeout(%, TICK)
        fade(node, opacity - RATE, cb)

    parent: document.createElement('div')
    jQuery(parent).toggleClass('parent')
    div: document.createElement('div')
    div.style.height: h + 'px'
    div.style.backgroundColor: color.str()
    div.style.position: 'relative'
    div.style.top: y + 'px'
    div.style.zIndex: z
    div.style.opacity: 0.6
    canvas.appendChild(parent)
    parent.appendChild(div)
    extend(div, 40, %)
    cb()
    fade(div, .45, %)
    canvas.removeChild(parent)

func laserFamily(baseY, baseH, baseColor, cb)
    centralH: baseH / 3
    periH: baseH / 6 # X2
    borderH: baseH / 6 # X2
    periColor: baseColor.adjust(0.9)
    borderColor: baseColor.adjust(0.8)
    horiLaser(baseY + periH + borderH , centralH, baseColor, 2, cb)
    setTimeout(%, TICK / 10)
    horiLaser(baseY + borderH, periH * 2 + centralH, periColor, 1, (): null)
    setTimeout(%, TICK / 10)
    horiLaser(baseY, baseH, borderColor, 0, (): null)

func aaHeight()
    return jQuery('#rb_anchor')[0].offsetTop - jQuery('#lt_anchor')[0].offsetTop

func aaWidth()
    return jQuery('#rb_anchor')[0].offsetLeft - jQuery('#lt_anchor')[0].offsetLeft

BEAM_HEIGHT: 12

func prepareCovers()
    count: Math.ceil(aaHeight() / BEAM_HEIGHT) + 1
    covers: []
    func cover(n)
        if n = count
            return
        parent: document.createElement('div')
        jQuery(parent).addClass('parent')
        div: document.createElement('div')
        div.style.backgroundColor: '#1a1a1a'
        div.style.height: BEAM_HEIGHT + 'px'
        div.style.width: aaWidth() + 'px'
        div.style.top: BEAM_HEIGHT * n + 'px'
        div.style.position: 'relative'
        div.topY: BEAM_HEIGHT * n
        canvas.appendChild(parent)
        parent.appendChild(div)
        covers.push(div)
        cover(n + 1)
    cover(0)
    return covers

covers: prepareCovers().sort((): Math.floor(Math.random() * 100) % 2 = 1)

func focus(list)
    func laser(wait)
        if list.length = 0
            return
        head: list.shift()
        laserFamily(head.topY, BEAM_HEIGHT, fromRGB(199, 255, 183), ():
            canvas.removeChild(head.parentNode)
        )
        setTimeout(%, TICK * wait)
        if wait < 10
            return laser(wait)
        laser(wait - 1)
    laser(20)

focus(covers)

# node selection
selection: {}

func setHover(node, f)
    node.onmouseover: f

func selectNode()
    import this
    me: this

    jQuery('span.label') |: setHover($, (): null)
    setTimeout(%, 1)
    RADIUS: 4
    if selection.lastSelected
        canvas.removeChild(selection.lastSelected)
        selection.lastSelected: null

    key: me.innerHTML

    bullet.style.display: 'none'
    bullet.innerHTML: {
        Blog: '''<img src='http://blog.bitfoc.us/favicon.ico'>&nbsp;Bit Focus Blog<br>
                 <br>
                 <a href='http://blog.bitfoc.us/tag=C%2b%2b'>C++</a>
                 <a href='http://blog.bitfoc.us/tag=Python'>Python</a>
                 Programming<br>
                 <a href='http://blog.bitfoc.us/?tag=Web%20Server'>Web designs</a><br>
                 And also <a href='http://blog.bitfoc.us/?tag=Algorithm'>algorithm</a> implements
                 ''',
        Twitter: '''Follow <a href='https://twitter.com/neuront'>@neuront</a> on twitter<br>
                    Gossip on programming and animation
                 ''',
        Codes: '''What I'm coding now?<br>
                  <a href='https://github.com/neuront/stekinscript'>Stekinscript</a> -  A language to generate Javascript code<br>
                  <a href='https://github.com/neuront/nijipress'>Nijipress</a> - Blog program in Python on Google App Engine''',
        About: '''Bit Focus<br>
                  Creator: Neuron Teckid<br>
                  &nbsp;<br>
                  Thanks for your visiting
               ''',
    }[key]
    jQuery(bullet).slideDown()

    laserFamily(me.offsetTop, BEAM_HEIGHT, fromRGB(216, 216, 216), %)

    parent: document.createElement('div')
    jQuery(parent).addClass('parent')
    div: document.createElement('div')
    div.style.cursor: 'pointer'
    div.style.backgroundColor: 'white'
    div.style.height: jQuery(me).height() + 2 * RADIUS + 'px'
    div.style.width: jQuery(me).width() + 2 * RADIUS + 'px'
    div.style.top: me.offsetTop - RADIUS + 'px'
    div.style.left: me.offsetLeft - RADIUS + 'px'
    div.style.position: 'relative'
    div.style.borderRadius: RADIUS + 'px'
    div.style.opacity: 0.3
    canvas.appendChild(parent)
    parent.appendChild(div)

    selection.lastSelected: parent
    jQuery('span.label') |: setHover($, selectNode)

    parent.onclick: ():
        window.location: {
            Blog: 'http://blog.bitfoc.us/',
            Twitter: 'https://twitter.com/neuront',
            Codes: 'https://github.com/neuront',
            About: 'javascript:void(0)',
        }[key]

jQuery('span.label') |: setHover($, selectNode)
